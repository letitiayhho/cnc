#!/usr/bin/env python

import os
import re
import argparse
import shutil
import speech_recognition as sr

# Create recognizer object
r = sr.Recognizer()

# Check directory exists
def check_dir(dir):
	if not os.path.isdir(dir):
		print(f"List dir does not exist yet, creating {dir}")
		os.mkdir(dir)

# Function for applying recognizer
def recognize_text(r, filename):
	with sr.AudioFile(filename) as source:
		# load audio to memory    
		audio_data = r.record(source)

		# recognize
		text = r.recognize_google(audio_data)
	return(text)

# Extract word num from filename
def get_word_num(filename):
	original_num = re.search(r"[0-9]{1,3}", filename).group()
	word_num = int(int(original_num)/2)
	if word_num <= 3:
		word_num = "practice-" + str(word_num)
	elif word_num > 3:
		word_num -= 3 # account for practice items
		word_num = str(word_num)
	return(word_num)

def main(listnum) -> None:
	read_dir = f'stim/split/list-{listnum}/'
	write_dir = f'stim/labels/list-{listnum}/'
	check_dir(write_dir)

	for filename in os.listdir(read_dir):
		read_name = read_dir + filename
		word_num = get_word_num(filename)
		print(f"Reading {read_name}")
	    
		# Try to recognize text
		try:
			text = recognize_text(r, read_name)
			print(f"Guessing the word is {text}")
		except:
			text = []
			print("Could not recognize word")
	    
		# Skip readys
		if text == 'ready':
			continue
	    
		# Decide on filename
		if text == []:
			write_name = write_dir + word_num + "-" + filename
		else:
			write_name = write_dir + word_num + "-" + text + '.wav'
	    
		# Create file
		print(f"Copying {read_name} to {write_name}")
		shutil.copyfile(read_name, write_name)

if __name__ == "__main__":
	parser = argparse.ArgumentParser(description = "Name .wav file by automatically recognized word")
	parser.add_argument('listnum',
		type = str,
		nargs = 1,
		help = 'list number')
	args = parser.parse_args()
	listnum = args.listnum[0]
	print(f"listnum: {listnum}")
	main(listnum)
